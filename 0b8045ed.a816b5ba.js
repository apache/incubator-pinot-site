/*! For license information please see 0b8045ed.a816b5ba.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{105:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return u})),a.d(t,"default",(function(){return O}));var n=a(1),r=a(6),o=a(0),c=a.n(o),l=a(170),i=(a(175),a(177)),s=a(178),b={title:"Cluster",sidebar_label:"cluster",description:"Cluster"},p={id:"components/cluster",title:"Cluster",description:"Cluster",source:"@site/docs/components/cluster.md",permalink:"/docs/components/cluster",editUrl:"https://github.com/apache/incubator-pinot/edit/master/website/docs/components/cluster.md",sidebar_label:"cluster",sidebar:"docs",previous:{title:"Broker",permalink:"/docs/components/broker"},next:{title:"Pinot Query Language (PQL)",permalink:"/docs/components/controller"}},u=[{value:"Cluster components",id:"cluster-components",children:[{value:"Participant",id:"participant",children:[]},{value:"Spectator",id:"spectator",children:[]},{value:"Controller",id:"controller",children:[]}]},{value:"Logical view",id:"logical-view",children:[]},{value:"Setup a Pinot Cluster",id:"setup-a-pinot-cluster",children:[{value:"Using docker images",id:"using-docker-images",children:[]}]}],d={rightToc:u},m="wrapper";function O(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)(m,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Cluster is a set a nodes comprising of servers, brokers, controllers and minions."),Object(l.b)("p",null,"Pinot leverages ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"http://helix.apache.org"}),"Apache Helix")," for cluster management. Helix is a cluster management framework to manage replicated, partitioned resources in a distributed system. Helix uses Zookeeper to store cluster state and metadata."),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"../../static/img/components/components.png",alt:"Cluster Components"}))),Object(l.b)("h2",{id:"cluster-components"},"Cluster components"),Object(l.b)("p",null,"Briefly, Helix divides nodes into three logical components based on their responsibilities"),Object(l.b)("h3",{id:"participant"},"Participant"),Object(l.b)("p",null,"The nodes that host distributed, partitioned resources"),Object(l.b)("h3",{id:"spectator"},"Spectator"),Object(l.b)("p",null,"The nodes that observe the current state of each Participant and use that information to access the resources. Spectators are notified of state changes in the cluster (state of a participant, or that of a partition in a participant)."),Object(l.b)("h3",{id:"controller"},"Controller"),Object(l.b)("p",null,"The node that observes and controls the Participant nodes. It is responsible for coordinating all transitions in the cluster and ensuring that state constraints are satisfied while maintaining cluster stability."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Pinot Servers are modeled as Participants, more details about server nodes can be found in ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"../../docs/components/server"}),"Server")),Object(l.b)("li",{parentName:"ul"},"Pinot Brokers are modeled as Spectators, more details about broker nodes can be found in ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"../../docs/components/broker"}),"Broker")),Object(l.b)("li",{parentName:"ul"},"Pinot Controllers are modeled as Controllers, more details about controller nodes can be found in ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"../../docs/components/controller"}),"Controller"))),Object(l.b)("h2",{id:"logical-view"},"Logical view"),Object(l.b)("p",null,"Another way to visualize the cluster is a logical view, wherein a cluster contains ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"../../docs/components/segments"}),"tenants"),", tenants contain ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"../../docs/components/tables"}),"tables"),", and tables contain ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"../../docs/components/segments"}),"segments"),"."),Object(l.b)("p",null,Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"../../static/img/components/ClusterLogical.png",alt:"Logical View"}))),Object(l.b)("h2",{id:"setup-a-pinot-cluster"},"Setup a Pinot Cluster"),Object(l.b)("p",null,"Typically, there is only cluster per environment/data center. There is no needed to create multiple Pinot clusters since Pinot supports the concept of ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"../../docs/components/tenants"}),"tenants"),"."),Object(l.b)("p",null,"At LinkedIn, the largest Pinot cluster consists of 1000+ nodes."),Object(l.b)("p",null,"To setup a Pinot cluster, we need to first start Zookeeper:"),Object(l.b)(i.a,{className:"Install",defaultValue:"Using launcher scripts",values:[{label:Object(l.b)(c.a.Fragment,null,Object(l.b)("i",{className:"Using docker images"})," Using docker images"),value:"docker"},{label:Object(l.b)(c.a.Fragment,null,Object(l.b)("i",{className:"Using launcher scripts"})," Using launcher scripts"),value:"launcer"}],mdxType:"Tabs"},Object(l.b)(s.a,{value:"docker",mdxType:"TabItem"},Object(l.b)("ol",null,Object(l.b)("li",{parentName:"ol"},"Create a Network\nCreate an isolated bridge network in docker")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker network create -d bridge pinot-demo\n")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Start Zookeeper")),Object(l.b)("p",null,"Start Zookeeper in daemon."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker run \\\n    --network=pinot-demo \\\n    --name pinot-zookeeper \\\n    --restart always \\\n    -p 2181:2181 \\\n    -d zookeeper:3.5.6\n")),Object(l.b)("ol",{start:3},Object(l.b)("li",{parentName:"ol"},"Start Zookeeper UI\nStart  ZKUI to browse Zookeeper data at ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"http://localhost:9090"}),"http://localhost:9090"),".")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker run \\\n    --network pinot-demo --name=zkui \\\n    -p 9090:9090 \\\n    -e ZK_SERVER=pinot-zookeeper:2181 \\\n    -d qnib/plain-zkui:latest\n")),Object(l.b)("ol",{start:4},Object(l.b)("li",{parentName:"ol"}))),Object(l.b)(s.a,{value:"launcer",mdxType:"TabItem"},Object(l.b)("p",null,"Download Pinot Distribution using instructions in ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:""}),"Download")),Object(l.b)("p",null,"Start Zookeeper"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"bin/pinot-admin.sh StartZookeeper\n")),Object(l.b)("ol",{start:2},Object(l.b)("li",{parentName:"ol"},"Start Zooinspector")),Object(l.b)("p",null,"Install ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/jfim/zooinspector"}),"zooinspector")," to view the data in Zookeeper, and connect to localhost:2181"))),Object(l.b)("p",null,"Once we've started Zookeeper, we can start other components to join this cluster. If you're using docker, pull the latest ",Object(l.b)("inlineCode",{parentName:"p"},"apachepinot/pinot")," image. "),Object(l.b)("h3",{id:"using-docker-images"},"Using docker images"),Object(l.b)("h4",{id:"pull-pinot-docker-image"},"Pull pinot docker image"),Object(l.b)("p",null,"(Optional) You can also follow the instructions here to build your own images.",Object(l.b)("br",null)),Object(l.b)("p",null,"You can try out pre-built Pinot all-in-one docker image."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-sql"}),"export PINOT_VERSION=0.3.0-SNAPSHOT\nexport PINOT_IMAGE=apachepinot/pinot:${PINOT_VERSION}\ndocker pull ${PINOT_IMAGE}\n")),Object(l.b)("p",null,"To start other components to join the cluster"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:""}),"Start Controller")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:""}),"Start Broker")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(n.a)({parentName:"li"},{href:""}),"Start Server"))),Object(l.b)("p",null,"Explore your cluster via Pinot Data Explorer"))}O.isMDXComponent=!0},170:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return p}));var n=a(0),r=a.n(n),o=r.a.createContext({}),c=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},l=function(e){var t=c(e.components);return r.a.createElement(o.Provider,{value:t},e.children)};var i="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,i=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),b=c(a),p=n,u=b[l+"."+p]||b[p]||s[p]||o;return a?r.a.createElement(u,Object.assign({},{ref:t},i,{components:a})):r.a.createElement(u,Object.assign({},{ref:t},i))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,c=new Array(o);c[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[i]="string"==typeof e?e:n,c[1]=l;for(var p=2;p<o;p++)c[p]=a[p];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},171:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var o=typeof n;if("string"===o||"number"===o)e.push(n);else if(Array.isArray(n)&&n.length){var c=r.apply(null,n);c&&e.push(c)}else if("object"===o)for(var l in n)a.call(n,l)&&n[l]&&e.push(l)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},175:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(171),c=a.n(o);a(94);t.a=function({children:e,classNames:t,fill:a,icon:n,type:o}){let l=null;switch(o){case"danger":l="alert-triangle";break;case"success":l="check-circle";break;case"warning":l="alert-triangle";break;default:l="info"}return r.a.createElement("div",{className:c()(t,"alert",`alert--${o}`,{"alert--fill":a,"alert--icon":!1!==n}),role:"alert"},!1!==n&&r.a.createElement("i",{className:c()("feather",`icon-${n||l}`)}),e)}},177:function(e,t,a){"use strict";var n=a(0),r=a.n(n),o=a(171),c=a.n(o),l=a(95),i=a.n(l);const s={left:37,right:39};t.a=function(e){const{block:t,children:a,defaultValue:o,values:l}=e,[b,p]=Object(n.useState)(o),u=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:c()("tabs",{"tabs--block":t})},l.map(({value:e,label:t})=>r.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":b===e,className:c()("tab-item",i.a.tabItem,{"tab-item--active":b===e}),key:e,ref:e=>u.push(e),onKeyDown:e=>((e,t,a)=>{switch(a.keyCode){case s.right:((e,t)=>{const a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()})(e,t);break;case s.left:((e,t)=>{const a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()})(e,t)}})(u,e.target,e),onFocus:()=>p(e),onClick:()=>p(e)},t))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter(e=>e.props.value===b)[0]))}},178:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}}}]);