(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{135:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return s}));var n=a(1),i=a(6),o=(a(0),a(170)),r={title:"Build Docker Images",sidebar_label:"build-docker",description:"Build Docker Images"},c={id:"misc/build-docker",title:"Build Docker Images",description:"Build Docker Images",source:"@site/docs/misc/build-docker.md",permalink:"/docs/misc/build-docker",editUrl:"https://github.com/apache/incubator-pinot/edit/master/website/docs/misc/build-docker.md",sidebar_label:"build-docker"},l=[{value:"Pinot",id:"pinot",children:[{value:"How to build a docker image",id:"how-to-build-a-docker-image",children:[]}]},{value:"How to publish a docker image",id:"how-to-publish-a-docker-image",children:[]},{value:"Kubernetes Examples",id:"kubernetes-examples",children:[]},{value:"Pinot Presto",id:"pinot-presto",children:[{value:"How to build",id:"how-to-build",children:[]},{value:"How to push",id:"how-to-push",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Volumes",id:"volumes",children:[]},{value:"Kubernetes Examples",id:"kubernetes-examples-1",children:[]}]},{value:"Pinot Superset",id:"pinot-superset",children:[{value:"How to build",id:"how-to-build-1",children:[]},{value:"Configuration",id:"configuration-1",children:[]},{value:"Volumes",id:"volumes-1",children:[]},{value:"Kubernetes Examples",id:"kubernetes-examples-2",children:[]}]}],b={rightToc:l},p="wrapper";function s(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(o.b)(p,Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The scripts to build Pinot related docker images is located at ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/apache/incubator-pinot/tree/master/docker/images"}),"here")),Object(o.b)("p",null,"You can access those scripts by running below command to checkout Pinot repo:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git clone git@github.com:apache/incubator-pinot.git pinot\ncd pinot/docker/images\n")),Object(o.b)("p",null,"You can find current supported 3 images in this directory:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Pinot: Pinot all-in-one distribution image"),Object(o.b)("li",{parentName:"ul"},"Pinot-Presto: Presto image with Presto-Pinot Connector built-in."),Object(o.b)("li",{parentName:"ul"},"Pinot-Superset: Superset image with Pinot connector built-in.")),Object(o.b)("h2",{id:"pinot"},"Pinot"),Object(o.b)("p",null,"This is a docker image of ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/apache/incubator-pinot"}),"Apache Pinot")),Object(o.b)("h3",{id:"how-to-build-a-docker-image"},"How to build a docker image"),Object(o.b)("p",null,"There is a docker build script which will build a given Git repo/branch and tag the image."),Object(o.b)("p",null,"Usage:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./docker-build.sh [Docker Tag] [Git Branch] [Pinot Git URL]\n")),Object(o.b)("p",null,"This script will check out Pinot Repo ",Object(o.b)("inlineCode",{parentName:"p"},"[Pinot Git URL]")," on branch ",Object(o.b)("inlineCode",{parentName:"p"},"[Git Branch]")," and build the docker image for that. ",Object(o.b)("br",null),"\nThe docker image is tagged as ",Object(o.b)("inlineCode",{parentName:"p"},"[Docker Tag]"),". ",Object(o.b)("br",null),"\nDocker Tag: Name and tag your docker image. Default is ",Object(o.b)("inlineCode",{parentName:"p"},"pinot:latest"),". ",Object(o.b)("br",null),"\nGit Branch: The Pinot branch to build. Default is master. ",Object(o.b)("br",null),"\nPinot Git URL: The Pinot Git Repo to build, users can set it to their own fork. ",Object(o.b)("br",null),"\nPlease note that, the URL is ",Object(o.b)("inlineCode",{parentName:"p"},"https://")," based, not ",Object(o.b)("inlineCode",{parentName:"p"},"git://"),". ",Object(o.b)("br",null),"\nDefault is the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/apache/incubator-pinot.git"}),"Apache Repo: https://github.com/apache/incubator-pinot.git"),". ",Object(o.b)("br",null)),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Example of building and tagging a snapshot on your own fork:")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./docker-build.sh pinot_fork:snapshot-5.2 snapshot-5.2 https://github.com/your_own_fork/pinot.git\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Example of building a release version:")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./docker-build.sh pinot:release-0.1.0 release-0.1.0 https://github.com/apache/incubator-pinot.git\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Example of building current master branch as a snapshot:")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./docker-build.sh apachepinot/pinot:0.3.0-SNAPSHOT master\n")),Object(o.b)("h2",{id:"how-to-publish-a-docker-image"},"How to publish a docker image"),Object(o.b)("p",null,"Script ",Object(o.b)("inlineCode",{parentName:"p"},"docker-push.sh")," publishes a given docker image to your docker registry.\nIn order to push to your own repo, the image needs to be explicitly tagged with the repo name."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Example of publishing an image to ",Object(o.b)("inlineCode",{parentName:"li"},"[apachepinot/pinot](https://hub.docker.com/u/apachepinot/repository/docker/apachepinot/pinot)")," dockerHub repo.")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./docker-push.sh apachepinot/pinot:latest\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"You can also tag a built image, then push it.")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker tag pinot:release-0.1.0 apachepinot/pinot:release-0.1.0\ndocker push apachepinot/pinot:release-0.1.0\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Script docker-build-and-push.sh builds and publishes this docker image to your docker registry after build.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Example of building and publishing an image to ",Object(o.b)("inlineCode",{parentName:"p"},"[apachepinot/pinot](https://hub.docker.com/u/apachepinot/repository/docker/apachepinot/pinot)")," dockerHub repo."))),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./docker-build-and-push.sh apachepinot/pinot:latest master https://github.com/apache/incubator-pinot.git\n")),Object(o.b)("h2",{id:"kubernetes-examples"},"Kubernetes Examples"),Object(o.b)("p",null,"Please refer to ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/administration/installation/cloud/on-premises"}),"Kubernetes Quickstart")," for deployment examples."),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/administration/installation/cloud/on-premises"}),"Kubernetes Quickstart")),Object(o.b)("h2",{id:"pinot-presto"},"Pinot Presto"),Object(o.b)("p",null,"Docker image for Presto with Pinot integration.\nThis docker build project is specialized for Pinot."),Object(o.b)("h3",{id:"how-to-build"},"How to build"),Object(o.b)("p",null,"Usage:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./docker-build.sh [Docker Tag] [Git Branch] [Presto Git URL]\n")),Object(o.b)("p",null,"This script will check out Pinot Repo ",Object(o.b)("inlineCode",{parentName:"p"},"[Pinot Git URL]")," on branch ",Object(o.b)("inlineCode",{parentName:"p"},"[Git Branch]")," and build the docker image for that. ",Object(o.b)("br",null),"\nThe docker image is tagged as ",Object(o.b)("inlineCode",{parentName:"p"},"[Docker Tag]"),". ",Object(o.b)("br",null),"\nDocker Tag: Name and tag your docker image. Default is ",Object(o.b)("inlineCode",{parentName:"p"},"pinot:latest"),". ",Object(o.b)("br",null),"\nGit Branch: The Pinot branch to build. Default is master. ",Object(o.b)("br",null),"\nPinot Git URL: The Pinot Git Repo to build, users can set it to their own fork. ",Object(o.b)("br",null),"\nPlease note that, the URL is ",Object(o.b)("inlineCode",{parentName:"p"},"https://")," based, not ",Object(o.b)("inlineCode",{parentName:"p"},"git://"),". ",Object(o.b)("br",null),"\nDefault is the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/apache/incubator-pinot.git"}),"Apache Repo: https://github.com/apache/incubator-pinot.git"),". ",Object(o.b)("br",null)),Object(o.b)("h3",{id:"how-to-push"},"How to push"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker push apachepinot/pinot-presto:latest\n")),Object(o.b)("h3",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"Follow the instructions provided by Presto for writing your own configuration files under etc directory."),Object(o.b)("h3",{id:"volumes"},"Volumes"),Object(o.b)("p",null,"The image defines two data volumes: one for mounting configuration into the container, and one for data.\nThe configuration volume is located alternatively at ",Object(o.b)("inlineCode",{parentName:"p"},"/home/presto/etc"),", which contains all the configuration and plugins.\nThe data volume is located at ",Object(o.b)("inlineCode",{parentName:"p"},"/home/presto/data"),"."),Object(o.b)("h3",{id:"kubernetes-examples-1"},"Kubernetes Examples"),Object(o.b)("p",null,"Please refer to presto-coordinator.yaml as k8s deployment example."),Object(o.b)("h2",{id:"pinot-superset"},"Pinot Superset"),Object(o.b)("p",null,"Docker image for Superset with Pinot integration.\nThis docker build project is based on Project docker-superset and specialized for Pinot."),Object(o.b)("h3",{id:"how-to-build-1"},"How to build"),Object(o.b)("p",null,"Please modify file ",Object(o.b)("inlineCode",{parentName:"p"},"Makefile")," to change image and ",Object(o.b)("inlineCode",{parentName:"p"},"superset_version")," accordingly.\nBelow command will build docker image and tag it as ",Object(o.b)("inlineCode",{parentName:"p"},"superset_version")," and ",Object(o.b)("inlineCode",{parentName:"p"},"latest"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make latest\n")),Object(o.b)("p",null,"You can also build directly with ",Object(o.b)("inlineCode",{parentName:"p"},"docker build")," command by setting arguments:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"docker build \\\n    --build-arg NODE_VERSION=latest \\\n    --build-arg PYTHON_VERSION=3.6 \\\n    --build-arg SUPERSET_VERSION=0.34.1 \\\n    --tag apachepinot/pinot-superset:0.34.1 \\\n    --target build .\n")),Object(o.b)("p",null,"How to push"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"make push\n")),Object(o.b)("h3",{id:"configuration-1"},"Configuration"),Object(o.b)("p",null,"Follow the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://superset.incubator.apache.org/installation.html#configuration"}),"instructions")," provided by Apache Superset for writing your own superset_config.py."),Object(o.b)("p",null,"Place this file in a local directory and mount this directory to /etc/superset inside the container. This location\nis included in the image's ",Object(o.b)("inlineCode",{parentName:"p"},"PYTHONPATH"),". Mounting this file to a different location is possible, but it will need to be in the PYTHONPATH."),Object(o.b)("h3",{id:"volumes-1"},"Volumes"),Object(o.b)("p",null,"The image defines two data volumes: one for mounting configuration into the container, and one for data (logs, SQLite DBs, &c)."),Object(o.b)("p",null,"The configuration volume is located alternatively at ",Object(o.b)("inlineCode",{parentName:"p"},"/etc/superset")," or ",Object(o.b)("inlineCode",{parentName:"p"},"/home/superset"),"; either is acceptable. Both of these directories are included in the PYTHONPATH of the image. Mount any configuration (specifically the superset_config.py file) here to have it read by the app on startup."),Object(o.b)("p",null,"The data volume is located at ",Object(o.b)("inlineCode",{parentName:"p"},"/var/lib/superset")," and it is where you would mount your SQLite file (if you are using that as your backend), or a volume to collect any logs that are routed there. This location is used as the value of the ",Object(o.b)("inlineCode",{parentName:"p"},"SUPERSET_HOME")," environmental variable."),Object(o.b)("h3",{id:"kubernetes-examples-2"},"Kubernetes Examples"),Object(o.b)("p",null,"Please refer to superset.yaml as k8s deployment example."))}s.isMDXComponent=!0},170:function(e,t,a){"use strict";a.d(t,"a",(function(){return c})),a.d(t,"b",(function(){return s}));var n=a(0),i=a.n(n),o=i.a.createContext({}),r=function(e){var t=i.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):Object.assign({},t,e)),a},c=function(e){var t=r(e.components);return i.a.createElement(o.Provider,{value:t},e.children)};var l="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=function(e,t){var a={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&-1===t.indexOf(n)&&(a[n]=e[n]);return a}(e,["components","mdxType","originalType","parentName"]),p=r(a),s=n,u=p[c+"."+s]||p[s]||b[s]||o;return a?i.a.createElement(u,Object.assign({},{ref:t},l,{components:a})):i.a.createElement(u,Object.assign({},{ref:t},l))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,r=new Array(o);r[0]=p;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c[l]="string"==typeof e?e:n,r[1]=c;for(var s=2;s<o;s++)r[s]=a[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);